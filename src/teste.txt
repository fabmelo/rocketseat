import axios from 'axios';

class Api {
    static async getUserInfo(username) {

        try {
            const response = await axios.get(`https://api.github.com/users/${username}`);
            console.log(response);
        } catch (err) {
            console.warn('Erro na API');
        }

    }
}

Api.getUserInfo('fabmelo');







const minhaPromise = () => new Promise((resolve, reject) => {
    setTimeout(() => { resolve('OK') }, 2000);
});

// antigo
minhaPromise().then(response => {
    console.log(response);    
});

// novo
async function executaPromise1() {
    console.log(await minhaPromise());    
    console.log(await minhaPromise());    
    console.log(await minhaPromise());    
}

// com arrow function
const executaPromise2 = async () => {
    console.log(await minhaPromise());    
    console.log(await minhaPromise());    
    console.log(await minhaPromise());    
}

executaPromise1();
executaPromise2();









const arr = [1, 2, 4, 5, 6, 8];

// map
const newArr = arr.map((item, index) => item + index);
console.log(newArr);

// reduce
const sum = arr.reduce((total, next) => total + next);
console.log(sum);

// filter
const filter = arr.filter((item) => item % 2 === 0);
console.log(filter);

// find
const find = arr.find((item) => item === 4);
console.log(find);

// rest -> pega o resto dos dados e aplica a uma const ou var
const usuario = {
    nome: 'Fabiano',
    idade: 44,
    empresa: 'TechShop'
}
const { nome, ...resto } = usuario;
console.log(nome);
console.log(resto);
// ou
const arrr = [1, 2, 3, 4, 5, 6];
const [a, b, c, ...d] = arrr;
console.log(a);
console.log(b);
console.log(c);
console.log(d);
// ou
function somar(...params) {
    return params.reduce((total, next) => total + next);
}
console.log(somar(2, 4, 6, 8, 10));

// spread - a partir de uma estrutura de dados ele criar uma nova
const arr1 = [1, 2, 3];
const arr2 = [4, 5, 6];
const arr3 = [...arr1, ...arr2];
console.log(arr3);
// ou 
const usuario1 = {
    nome: 'Fabiano',
    idade: 44,
    empresa: 'TechShop'
}
const usuario2 = { ...usuario1, nome: 'Galg√¢nia' };
console.log(usuario2);








class Matematica{
    static soma(a,b){
        return a + b;
    }
}

console.log(Matematica.soma(4,4));



class List {
    constructor() {
        this.data = [];
    }

    add(data) {
        this.data.push(data);
        console.log(this.data);

    }
}

class TodoList extends List {
    constructor() {
        super();
    }
}

const MinhaLista = new TodoList();

document.getElementById('novotodo').onclick = function () {
    MinhaLista.add('Fabiano');
}
